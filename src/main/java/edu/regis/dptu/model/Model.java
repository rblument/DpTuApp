/*
 * DPTu: Dynamic Programming Tutor
 * 
 *  (C) Johanna & Richard Blumenthal, All rights reserved
 * 
 *  Unauthorized use, duplication or distribution without the authors'
 *  permission is strictly prohibited.
 * 
 *  Unless required by applicable law or agreed to in writing, this
 *  software is distributed on an "AS IS" basis without warranties
 *  or conditions of any kind, either expressed or implied.
 */
package edu.regis.dptu.model;

import java.io.Serializable;

/**
 * A domain model with a unique id
 * 
 * ToDo: as assigned by the database used to persist it.
 * 
 * @author rickb
 */
public abstract class Model implements Serializable {
    /**
     * A default identifier indicating a model that has not been saved to the 
     * database.
     */
    public static final int DEFAULT_ID = -1;
    
    /**
     * If not the default id, the unique id of this model, as assigned by the 
     * database used to persist this model.
     */
    protected int id;
    
    /**
     * Instantiate this model with a default id.
     */
    public Model() {
        this(DEFAULT_ID);
    }
    
    /**
     * Instantiate this model with the given id.
     * 
     * @param id the model's unique id, as determined by the database used to
     *           persist this model.
     */
    public Model(int id) {
        this.id = id;
    }

    /**
     * Return this model's id.
     * 
     * @return a default id, otherwise the unique id of this model, as assigned
     *         by the database used to persist this model. 
     */
    public int getId() {
        return id;
    }

    /**
     * Assign the unique id generated by the database persisting this model.
     * 
     * @param id the unique id generated by the database for this model
     */
    public void setId(int id) {
        this.id = id;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Model other = (Model) obj;
        if (this.id != other.id) {
            return false;
        }
        return true;
    }
    
    @Override
    public String toString() {
        return "Model: " + id + ", " + super.toString();
    } 
}
